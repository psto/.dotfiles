# Basic Settings
set hidden true
set ignorecase true
set icons true
set sixel true

set previewer ~/.local/bin/lf-previewer

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd open ${{
  # ~/.local/bin/launch "$f"
  xdg-open "$f"
}}

cmd archive ${{
  ouch compress "$f" "$f".zip
}}
cmd unarchive ${{
  case "$f" in
    *.zip) unzip "$f" ;;
    *.tar.gz) tar -xzvf "$f" ;;
    *.tar.bz2) tar -xjvf "$f" ;;
    *.tar) tar -xvf "$f" ;;
    *) echo "Unsupported format" ;;
  esac
}}

# drag and drop
cmd dragon-drop ${{
  dragon-drop
}}

# eza
cmd on-select &{{
  lf -remote "send $id set statfmt \"$(eza -ld --color=always "$f")\""
}}

# git
cmd git_branch ${{
  git branch | fzf | xargs git checkout
  pwd_shell=$(pwd | sed 's/\\/\\\\/g;s/"/\\"/g')
  lf -remote "send $id updir"
  lf -remote "send $id cd \"$pwd_shell\""
}}

cmd on-cd &{{
  # display git repository status in your prompt
  source /usr/share/git/completion/git-prompt.sh
  GIT_PS1_SHOWDIRTYSTATE=auto
  GIT_PS1_SHOWSTASHSTATE=auto
  GIT_PS1_SHOWUNTRACKEDFILES=auto
  GIT_PS1_SHOWUPSTREAM=auto
  GIT_PS1_COMPRESSSPARSESTATE=auto
  git=$(__git_ps1 " [GIT BRANCH:> %s]") || true
  fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m$git\033[0m"
  lf -remote "send $id set promptfmt \"$fmt\""
}}

cmd fzf_search ${{ 
  fzf
}}

cmd rename ${{
  vimv
}}

# Trash
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trashy put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}
cmd restore_trash ${{
  trashy restore
}}

# zoxide
cmd z %{{
	result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}
cmd zi ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d

map ar archive
map au unarchive
map <c-t> :fzf_search

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear

map gb :git_branch
map gp ${{clear; git pull --rebase || true; echo "press ENTER"; read ENTER}}
map gs ${{clear; git status; echo "press ENTER"; read ENTER}}
map gl ${{clear; git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit}}

map dd trash
map dr restore_trash

map r rename

map zz z
map zi zi
