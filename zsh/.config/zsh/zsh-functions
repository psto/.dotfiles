# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}

# move the latest downloaded file to current path
function mv-download() {
  __fname="$(ls -t ~/downloads | head -n 1)"
  __fpath="$HOME/downloads/"$__fname""
  mv "$__fpath" \.
}
# copy the latest downloaded file to current path
function cp-download() {
    __fname="$(ls -t ~/downloads | head -n 1)"
    __fpath="$HOME/downloads/"$__fname""
    cp -a "$__fpath" \.
}
# open the latest downloaded file
function open-download() {
    __fname="$(ls -t ~/downloads | head -n 1)"
    __fpath="$HOME/downloads/"$__fname""
    xdg-open "$__fpath"
}

# lf with previews
lf-ueberzug() {
	cleanup() {
		lf-ueberzug-cleaner
		kill "$UEBERZUGPID"
		pkill -f "tail -f $LF_UEBERZUG_TEMPDIR/fifo"
		rm -rf "$LF_UEBERZUG_TEMPDIR"
	}
	trap cleanup INT HUP

	# Set up temporary directory.
	export LF_UEBERZUG_TEMPDIR="$(mktemp -d -t lf-ueberzug-XXXXXX)"

	# Launch ueberzug.
	mkfifo "$LF_UEBERZUG_TEMPDIR/fifo"
	tail -f "$LF_UEBERZUG_TEMPDIR/fifo" | ueberzug layer --silent &
	UEBERZUGPID=$!

	lf "$@"
	cleanup
}

# fzf cd
function fcd() {
    local dir;

    while true; do
      # exit with ^D
      dir="$(ls -a1F | grep '[/@]$' | grep -v '^./$' | sed 's/@$//' | fzf --height 40% --reverse --no-multi --preview 'pwd' --preview-window=up,1,border-none --no-info)"
      if [[ -z "${dir}" ]]; then
        break
      elif [[ -d "${dir}" ]]; then
        cd "${dir}"
      fi
    done
}

# ripgrep-all with fzf
rga-fzf() {
	RG_PREFIX="rga --files-with-matches"
	local file
	file="$(
		FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
			fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}" \
				--preview-window="70%:wrap"
	)" &&
	echo "opening $file" &&
	xdg-open "$file"
}

# ls function
do-ls() {emulate -L zsh; exa;}

# make a new directory and cd into it
function mkcd { mkdir -p "$1" && cd "$1" }

# OSC-7 escape sequence for foot terminal spawning new terminal in the same dir
function osc7 {
    local LC_ALL=C
    export LC_ALL

    setopt localoptions extendedglob
    input=( ${(s::)PWD} )
    uri=${(j::)input/(#b)([^A-Za-z0-9_.\!~*\'\(\)-\/])/%${(l:2::0:)$(([##16]#match))}}
    print -n "\e]7;file://${HOSTNAME}${uri}\e\\"
}
